关于字符串的大小写问题：
SQL语句不区分大小写---即关键字不区分大小写；
字段名不区分大小写，并且通常默认为大写---不加双引号时，默认为大写，且不能有空格；
表名不区分大小写；
字符串作为字段的值时，是严格区分大小写的；

查询结果中字段可以使用别名,尤其当所要查询的内容是计算字段的时候---计算字段

当SELECT语句中要查询的内容不是单纯的字段，而是一个表达式或者函数时，查询出来的结果集中对应的该字段的字段名就是这个函数或表达式，不利于读取，为此，我们为这样的列增加一个别名，使得查询出来的该字段的名字为这个别名，以增加可读性，甚至在子查询中对这样的情况海要求必须写别名。

FROM子句和WHERE子句

查询条件
说明：查询条件中可以放置函数和表达式的结果，也可以放置另外一次查询结果；
查询条件可以通过AND和OR复合

比较运算符
!=不是SQL标准中的，不建议使用---建议使用<>

需要明确的是：什么类型的值可以比较大小；比较的标准是什么？---什么是大于，什么是小于？
NUMBER类型可比大小，规则与数学中一致；
DATE类型可比大小，日期晚的大;
字符串类型，比较大小没什么意义；

IS NULL 和 IS NOT NULL


逻辑操作符---AND，OR
查询条件为同时满足多个条件时，可以用AND连接这些条件；
查询条件为至少满足其中之一时，可以用OR连接这些条件；

AND和OR连接多个条件时
注意：AND和OR存在优先级问题
AND的优先级高于OR，提高优先级使用括号；

AND和OR的作用：是使多个简单的查询条件可以通过逻辑运算符AND和OR连接为复杂的运算符；

BETWEEN XX AND XX
判断指定内容的值是否在一个区间范围内；值的类型只要可比较大小就行，一般为数字或
日期；注意小的在前，大的在后。

IN(set)和 NOT IN(set)
set表示取值的罗列

如果IN后面的取值列表为确定的值，那么IN可以用多个OR的连接替代；
但如果IN后面的取值列表中的值在写查询条件时值是不确定的，那么就不能用OR替代；
比如:IN的取值列表为查询结果时，是OR不可替代的


模糊查询-LIKE-一般用来匹配字符串
通配符
_ 表示单个字符
% 表示多个字符

关键字
ANY 和 ALL
常用的方式：判断 "指定内容" >,>=,<,<= "一个列表内容"时使用。
ANY 和 ALL后面通常跟一个列表，并与>,>=,<,<=配合使用；
因为普通的>判断只能跟一个值，但是加了ANY，ALL及其后面的列表时，可以和列表中所有值比较
含义如下：-和字面意思一致
>ANY 大于列表中任意一个
>ALL 大于列表中所有
<ANY 小于列表中任意一个
<ALL 大于列表中所有

说明：IN(list) ANY(list) ALL(list)
常用的形式是：list为另一次查询的结果

==============================

查询结果排序---ORDER BY
ORDER BY用来对对查询结果集排序，ORDER BY子句必须写在SELECT语句的最后面。
ORDER BY可以根据后面所跟的字段的值进行升序或降序排列；
降序使用DESC，升序使用ASC，如果不写默认为升序

=======================

聚合函数---简单而言，聚合函数用于统计
又叫多行函数，分组函数
作用是将若干行记录进行统计，得出一个结果

MAX()和MIN()
统计指定内容中所有参与统计记录中的最大值和最小值

AVG()和SUM()
平均值和总数
聚合函数在统计的时候不计入NULL，为NULL值的连人头都不算

COUNT()
统计给定内容中非空的记录有多少条，而不关心记录的值是多少

查询语句的执行顺序
当一条查询语句中包含所有的子句，执行顺序依下列子句次序：
FROM 子句：执行顺序为从后往前、从右到左。数据量较少的表尽量放在后面。
WHERE子句：执行顺序为自下而上、从右到左。将能过滤掉最大数量记录的条件写在WHERE 子句的最右。
GROUP BY：执行顺序从左往右分组，最好在GROUP BY前使用WHERE将不需要的记录在GROUP BY之前过滤掉。
HAVING 子句：消耗资源。尽量避免使用，HAVING 会在检索出所有记录之后才对结果集进行过滤，需要排序等操作。
SELECT子句：少用*号，尽量取字段名称。ORACLE 在解析的过程中, 通过查询数据字典将*号依次转换成所有的列名, 消耗时间。
ORDER BY子句：执行顺序为从左到右排序，消耗资源。

关联查询
